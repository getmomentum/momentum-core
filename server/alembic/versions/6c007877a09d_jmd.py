"""jmd

Revision ID: 6c007877a09d
Revises: 
Create Date: 2024-06-09 01:55:33.484114

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6c007877a09d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('uid', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=True),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('last_login_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('provider_username', sa.String(length=255), nullable=True),
    sa.Column('provider_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('email')
    )
    op.create_table(
        'projects',
        sa.Column('id', sa.Integer, primary_key=True, autoincrement=True),
        sa.Column('directory', sa.Text, unique=True),
        sa.Column('is_default', sa.Boolean, default=False),        
        sa.Column('project_name', sa.Text, unique=True),
        sa.Column('repo_name', sa.Text),
        sa.Column('branch_name', sa.Text),
        sa.Column('user_id', sa.String(255), nullable=False),
        sa.Column('created_at', sa.TIMESTAMP, server_default=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('updated_at', sa.TIMESTAMP, server_default=sa.text('CURRENT_TIMESTAMP'), onupdate=sa.text('CURRENT_TIMESTAMP')),
        sa.Column('status', sa.String(255), default='created'),
        sa.ForeignKeyConstraint(['user_id'], ['users.uid'], ondelete='CASCADE'),
        sa.CheckConstraint("status IN ('created', 'ready', 'error')", name='check_status')
    
)
    op.create_table('endpoints',
    sa.Column('path', sa.Text(), nullable=True),
    sa.Column('identifier', sa.Text(), nullable=False),
    sa.Column('test_plan', sa.Text(), nullable=True),
    sa.Column('preferences', sa.Text(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('project_id', 'identifier')
    )
    op.create_table('explanation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identifier', sa.Text(), nullable=False),
    sa.Column('hash', sa.Text(), nullable=False),
    sa.Column('explanation', sa.Text(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identifier', 'hash', 'project_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('explanation')
    op.drop_table('endpoints')
    op.drop_table('projects')
    op.drop_table('users')
    # ### end Alembic commands ###
